Monu bhaiya wants to count all his girlfriend's Derangement. A Derangement is a permutation of n elements, so no element appears in its original position. For example, a derangement of {0, 1, 2, 3} is {2, 3, 1, 0}. Given a number n, find the total number of Derangements of a set of n elements.

Input Format
An integer N

Constraints
N=[1,10^6]

Output Format
Number of possible derangements

Sample Input
2
Sample Output
1
Explanation
For two elements say {0, 1}, there is only one possible derangement {1, 0}
Solution:
#include<iostream>
#include<stack>
using namespace std;
int main()
{int n;
cin>>n;

        // Initialize the stack with the base cases
        stack<int> s;
        s.push(1); // !0 = 1
        s.push(0); // !1 = 0

        // Use the stack to calculate the derangements
        for (int i = 2; i <= n; i++) {
            int k1 = s.top();
            s.pop();
            int m2 = s.top();
            s.pop();
            int d = (i - 1) * (k1 + m2);
            s.push(k1);
            s.push(d);
        }

        // Print the result
        cout<<s.top();
}
